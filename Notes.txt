05
======
- facial recognition

Things we need
- need Windows 8.1 (and visual studio?)
- visual studio
- open cv (Must Use 2.4.9!!!)
+ make sure you set the path for this to work
%OPENCV_DIR%/bin
+ add bin x86/vc12 (latest one) to path 
setx -m OPENCV_DIR C:\opencv\build\x86\vc12
- eyetribe sdk
- Kinect sdk C#

- must remember to set filepath in FaceRecognition.cpp and EnrollmentManager.cs

.NET framework needs to be 3.5
https://msdn.microsoft.com/en-us/library/hh506443(v=vs.110).aspx

Setup
- make sure FaceBasics is bolded (select it and project > set as startup ...)
- open Network folder, make sure to connect to main ocuhub computer

When switching folders, must change in FaceRecognition.cpp and EnrollmentManager.c

FaceBasics: main (pulls data from the Kinect)
 - pulls frames from Kinect -> to openCV
FaceEnrollment: 
 - openCV -> adapted for Kinect
 - does the training
 - 

 FaceRecognition
 - FaceRecognition.h: wrapper for bridging Kinect (C#) to OpenCV (C++)
 
 - Train (in FaceRecognition.cpp) array
 images: d.jpg, d.jpg, d.jpg, d.jpg
 labels: dylan, dylan, dylan, dylan
 crop: <x,y coordinates for where to crop>
 --> calls the OpenCV train
 FaceRecognitionResult: label (integer, needs to be mapped to database), confidence

=====================

Kinect App
- context.txt (write 'company' or 'alone')
- contacts.txt (people in the room) - (id, time they came in, distance)
- /<id>/
	+ info.txt (contains name, and later other details)
	+ 10 x <date><time>.jpg buffer
    	- 10 hertz (take face pics 10th of a second)

Flow at start of program

MainWindow -> EnrollmentManager -> WelcomePage -> EnterNamePage -> TrainingPage -> MainWindow -> FaceRecognition

FaceRecognition
- opencv port
- calls opencv methods

FaceEnrollment
- contains the gui with the pages
- page 4 controls some training

FaceBasics-WPF
- Mainwindow calls methods inside FaceRecognition
- boxes (kinect face basics stuff)


=> Try making my own based off of FaceBasics, ask Dylan how he did the openCV connecting

- training is done at the very beginning through the enrollment gui, then it opens up the video stream and "names" those people
- does not know if someone is a new person (will try to map to most similar person, lol)
 ****

How to tell if someone is in the room?
- try to do the "company"

======





Known bugs/ TODO
- FIX RESOLUTION ON SOME OF THE PAGES!
- error on training when face is too far to the top
- when someone has the same name already
- remove the done button and have it move on after 50 (constant variable) or so frames are made 
- remove debug messages
- does not tell you when training someone (add "Training Data" page so it doesn't look like its crashing)
- generalize the filepath
- optimize problem with saving/training pictures?
- dont know how to remove a person
- no update on faces that have already been made!! this is still kinda broken
- fix UI because it doesn't matter which button they press for an update

- random exception for when box is at the top?

- fix bugs for when not connected to the internet (so there isnt an exception)
- figure out what is causing error on faceimagecropped return
- add Remove button
- fix problem with facial recogniation??
- set up folder \\NARENDRAN-PC\Users\Narendran\Documents\eyehome
 + very slow on network
- does it actually update on both kinects? (FORCE UPDATE ON KINECT 2 EVERY NOW AND THEN!!!!)


HOW TO ADD AN APP TO EYEHOME
1. make physical folder in Documents > eyehome > “Test”
2. add a file “test” into folder for the scripts (can name anything, as long as its a ahk)
3. Open eyehome on visual studio and edit the menu.json to include the new application (use other examples in there as template)
4. Add an image to images/menu folder, same name as the ID from menu.json (needs to be png, ex. test.png)
5. Include new image to project with right click + “Include …”
6. if need be, in common.js, add one line of code:

localStorage.clear(); 

to “reload” the menu.json


